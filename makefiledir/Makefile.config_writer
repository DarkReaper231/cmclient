# This file generates Makefile.config
# Create default config from autodetected values
# Magic at work, note that you can't use commas in arguments for this
CONFIG_LINE=@$(SHELL) -c 'echo $(1)' >> $(MAKE_CONFIG) 2> /dev/null

$(MAKE_CONFIG):	
	
	touch $(MAKE_CONFIG)
	
	$(call CONFIG_LINE,\# OpenTTD config file for makefile)	
	$(call CONFIG_LINE,\# Set your options here - 1 for use and empty for disable)
	$(call CONFIG_LINE,)
	
	$(call CONFIG_LINE,\# User setup flags)
	$(call CONFIG_LINE,\# Translator: adds TODO to any untranslated strings)
	$(call CONFIG_LINE,\# Display_Warnings: when off it hides some warnings while compiling)
	$(call CONFIG_LINE,\# MIDI: sets path to midi player)
	$(call CONFIG_LINE,\# MIDI_ARG: sets an argument which is used when calling the midi player. Default off)
	$(call CONFIG_LINE,STATIC:=$(STATIC))
	$(call CONFIG_LINE,TRANSLATOR:=$(TRANSLATOR))
	$(call CONFIG_LINE,DISPLAY_WARNINGS:=$(DISPLAY_WARNINGS))
	$(call CONFIG_LINE,DEBUG:=$(DEBUG))
	$(call CONFIG_LINE,PROFILE:=$(PROFILE))
	$(call CONFIG_LINE,MIDI:=$(MIDI))
	$(call CONFIG_LINE,MIDI_ARG:=$(MIDI_ARG))
	$(call CONFIG_LINE,)
	
	$(call CONFIG_LINE,\# DATA_DIR_PREFIX is the path to OpenTTD. It can be absolute or relative)
	$(call CONFIG_LINE,\# USE_HOMEDIR sets \~/ in front of DATA_DIR_PREFIX so it uses the homedir)
	$(call CONFIG_LINE,\# do not type \~/ yourself because that will not work)
	$(call CONFIG_LINE,\# Folders should end with /)
	$(call CONFIG_LINE,BINARY_DIR:=$(BINARY_DIR))
	$(call CONFIG_LINE,INSTALL_DIR:=$(INSTALL_DIR))
	$(call CONFIG_LINE,USE_HOMEDIR:=$(USE_HOMEDIR))
	$(call CONFIG_LINE,GAME_DATA_DIR:=$(GAME_DATA_DIR))
	$(call CONFIG_LINE,PERSONAL_DIR:=$(PERSONAL_DIR))
	$(call CONFIG_LINE,)
	
	$(call CONFIG_LINE,\# Experimental)
	$(call CONFIG_LINE,WITH_NETWORK:=$(WITH_NETWORK))
	$(call CONFIG_LINE,WITH_DIRECTMUSIC:=$(WITH_DIRECTMUSIC))
	$(call CONFIG_LINE,)
	$(call CONFIG_LINE,)

	$(call CONFIG_LINE,\# Flag to skip test for OS when building static)
	$(call CONFIG_LINE,\# OpenTTD have only been succesfully tested with static builds on MorphOS and MacOSX)
	$(call CONFIG_LINE,\# If you want to try anyway on other OSes, set this flag)
	$(call CONFIG_LINE,\# Inform us if you have success)
	$(call CONFIG_LINE,SKIP_STATIC_CHECK:=$(SKIP_STATIC_CHECK))
	$(call CONFIG_LINE,)
	$(call CONFIG_LINE,)	

	$(call CONFIG_LINE,\# Everything below this line is autogenerated)
	$(call CONFIG_LINE,\#)
	$(call CONFIG_LINE,\# If you need to change anything below, you should run "make upgradeconf")
	$(call CONFIG_LINE,\# If that does not fix the problem, you should make a bug report.)
	$(call CONFIG_LINE,\# It would really help if you could tell how to autodetect the missing setting)
	$(call CONFIG_LINE,\# That info could be where the missing lib is placed)
	$(call CONFIG_LINE,)	
	
	$(call CONFIG_LINE,\# Libs)
	$(call CONFIG_LINE,WITH_ZLIB:=$(WITH_ZLIB))
	$(call CONFIG_LINE,WITH_SDL:=$(WITH_SDL))
	$(call CONFIG_LINE,WITH_PNG:=$(WITH_PNG))
	$(call CONFIG_LINE,STATIC_ZLIB_PATH:=$(STATIC_ZLIB_PATH))
	$(call CONFIG_LINE,)
	
	$(call CONFIG_LINE,\# OS flags)
	$(call CONFIG_LINE,WIN32:=$(WIN32))
	$(call CONFIG_LINE,UNIX:=$(UNIX))
	$(call CONFIG_LINE,OSX:=$(OSX))
	$(call CONFIG_LINE,FREEBSD:=$(FREEBSD))
	$(call CONFIG_LINE,MORPHOS:=$(MORPHOS))
	$(call CONFIG_LINE,CYGWIN:=$(CYGWIN))
	$(call CONFIG_LINE,MINGW:=$(MINGW))
	$(call CONFIG_LINE,)	
	
	$(call CONFIG_LINE,\# misc)
	$(call CONFIG_LINE,SDL-CONFIG:=$(SDL-CONFIG))
	$(call CONFIG_LINE,CONFIG_INCLUDED:=yes)
	$(call CONFIG_LINE,PATH_SET:=$(PATH_SET))
