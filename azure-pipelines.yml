trigger: none
pr: none



jobs:
- job: source
  displayName: 'Source'
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - script: |
      set -ex

      # Rename the folder to openttd-NNN-source
      mkdir openttd-$(Build.BuildNumber)
      find . -maxdepth 1 -not -name . -not -name openttd-$(Build.BuildNumber) -exec mv {} openttd-$(Build.BuildNumber)/ \;
      # Copy back release_date, as it is needed for the template 'release-bundles'
      cp openttd-$(Build.BuildNumber)/.release_date .release_date

      mkdir bundles
      tar --xz -cf bundles/openttd-$(Build.BuildNumber)-source.tar.xz openttd-$(Build.BuildNumber)
      zip -9 -r -q bundles/citymania-client-$(Build.BuildNumber)-source.zip openttd-$(Build.BuildNumber)
    displayName: 'Create bundle'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish bundles'
    inputs:
      PathtoPublish: bundles/
      ArtifactName: bundles

- job: windows
  displayName: 'Windows'
  pool:
    vmImage: 'VS2017-Win2016'
  dependsOn: source

  strategy:
    matrix:
      Win32:
        BuildPlatform: 'Win32'
        BundlePlatform: 'win32'
      Win64:
        BuildPlatform: 'x64'
        BundlePlatform: 'win64'

  steps:
  - template: azure-pipelines/templates/release-fetch-source.yml
  - template: azure-pipelines/templates/windows-dependencies.yml
  - template: azure-pipelines/templates/windows-dependency-zip.yml
  - template: azure-pipelines/templates/windows-build.yml
    parameters:
      BuildPlatform: $(BuildPlatform)
  - bash: |
      set -ex
      make -f Makefile.msvc bundle_pdb bundle_zip PLATFORM=$(BundlePlatform) BUNDLE_NAME=citymania-client-$(Build.BuildNumber)-$(BundlePlatform)
    displayName: 'Create bundles'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish bundles'
    inputs:
      PathtoPublish: bundles/
      ArtifactName: bundles

# - job: publish
#   dependsOn:
#   - windows
#   steps:
#   - task: PublishBuildArtifacts@1
#     displayName: 'Publish bundles'
#     inputs:
#       PathtoPublish: bundles/
#       ArtifactName: bundles
