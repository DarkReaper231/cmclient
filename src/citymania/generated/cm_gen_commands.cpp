// This file is generated by gen_commands.py, do not edit

#include "../../stdafx.h"
#include "cm_gen_commands.hpp"
#include "../../src/misc_cmd.h"
#include "../../src/object_cmd.h"
#include "../../src/order_cmd.h"
#include "../../src/town_cmd.h"
namespace citymania {
namespace cmd {

bool MoneyCheat::DoPost() {
    return ::Command<CMD_MONEY_CHEAT>::Post(this->error, this->tile, this->amount);
}

bool ChangeBankBalance::DoPost() {
    return ::Command<CMD_CHANGE_BANK_BALANCE>::Post(this->error, this->tile, this->delta, this->company, this->expenses_type);
}

bool IncreaseLoan::DoPost() {
    return ::Command<CMD_INCREASE_LOAN>::Post(this->error, this->tile, this->cmd, this->amount);
}

bool DecreaseLoan::DoPost() {
    return ::Command<CMD_DECREASE_LOAN>::Post(this->error, this->tile, this->cmd, this->amount);
}

bool Pause::DoPost() {
    return ::Command<CMD_PAUSE>::Post(this->error, this->tile, this->mode, this->pause);
}

bool BuildObject::DoPost() {
    return ::Command<CMD_BUILD_OBJECT>::Post(this->error, this->tile, this->type, this->view);
}

bool BuildObjectArea::DoPost() {
    return ::Command<CMD_BUILD_OBJECT_AREA>::Post(this->error, this->tile, this->start_tile, this->type, this->view, this->diagonal);
}

bool ModifyOrder::DoPost() {
    return ::Command<CMD_MODIFY_ORDER>::Post(this->error, this->tile, this->veh, this->sel_ord, this->mof, this->data);
}

bool SkipToOrder::DoPost() {
    return ::Command<CMD_SKIP_TO_ORDER>::Post(this->error, this->tile, this->veh_id, this->sel_ord);
}

bool DeleteOrder::DoPost() {
    return ::Command<CMD_DELETE_ORDER>::Post(this->error, this->tile, this->veh_id, this->sel_ord);
}

bool InsertOrder::DoPost() {
    return ::Command<CMD_INSERT_ORDER>::Post(this->error, this->tile, this->veh, this->sel_ord, this->new_order);
}

bool OrderRefit::DoPost() {
    return ::Command<CMD_ORDER_REFIT>::Post(this->error, this->tile, this->veh, this->order_number, this->cargo);
}

bool CloneOrder::DoPost() {
    return ::Command<CMD_CLONE_ORDER>::Post(this->error, this->tile, this->action, this->veh_dst, this->veh_src);
}

bool MoveOrder::DoPost() {
    return ::Command<CMD_MOVE_ORDER>::Post(this->error, this->tile, this->veh, this->moving_order, this->target_order);
}

bool ClearOrderBackup::DoPost() {
    return ::Command<CMD_CLEAR_ORDER_BACKUP>::Post(this->error, this->tile, this->user_id);
}

bool FoundTown::DoPost() {
    return ::Command<CMD_FOUND_TOWN>::Post(this->error, this->tile, this->size, this->city, this->layout, this->random_location, this->townnameparts, this->text);
}

bool RenameTown::DoPost() {
    return ::Command<CMD_RENAME_TOWN>::Post(this->error, this->tile, this->town_id, this->text);
}

bool DoTownAction::DoPost() {
    return ::Command<CMD_DO_TOWN_ACTION>::Post(this->error, this->tile, this->town_id, this->action);
}

bool TownGrowthRate::DoPost() {
    return ::Command<CMD_TOWN_GROWTH_RATE>::Post(this->error, this->tile, this->town_id, this->growth_rate);
}

bool TownRating::DoPost() {
    return ::Command<CMD_TOWN_RATING>::Post(this->error, this->tile, this->town_id, this->company_id, this->rating);
}

bool TownCargoGoal::DoPost() {
    return ::Command<CMD_TOWN_CARGO_GOAL>::Post(this->error, this->tile, this->town_id, this->te, this->goal);
}

bool TownSetText::DoPost() {
    return ::Command<CMD_TOWN_SET_TEXT>::Post(this->error, this->tile, this->town_id, this->text);
}

bool ExpandTown::DoPost() {
    return ::Command<CMD_EXPAND_TOWN>::Post(this->error, this->tile, this->town_id, this->grow_amount);
}

bool DeleteTown::DoPost() {
    return ::Command<CMD_DELETE_TOWN>::Post(this->error, this->tile, this->town_id);
}

}  // namespace cmd
}  // namespace citymania
